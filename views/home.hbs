<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Добро пожаловать в Ваш Банк</title>
    <link rel="stylesheet" href="/styles/homeStyle.css">
</head>
<body>
    <section class="greeting">
        <h2>Ваши средства</h2>

        <!-- Выпадающий список для выбора аккаунта -->
        <label for="accountSelect">Выберите аккаунт:</label>
        <select id="accountSelect" onchange="changeAccount(this.value)">
            {{#each accounts}}
                <option value="{{this._id}}" {{#if (eq this._id ../selectedAccountId)}}selected{{/if}}>
                    {{this.accountNumber}} - {{this.balance}} {{this.currency}}
                </option>
            {{/each}}
        </select>

        <p>Баланс текущего счета: <span class="balance-display">{{selectedAccount.balance}} {{selectedAccount.currency}}</span></p>

        {{#if accounts.[0].savingsBalance}}
            <p>Баланс сберегательного счета: {{accounts.[0].savingsBalance}} {{accounts.[0].savingsCurrency}}</p>
        {{/if}}

        {{#if upcomingPayments.length}}
            <div class="notifications">
                <h3>Ближайшие платежи по кредитам:</h3>
                <ul>
                    {{#each upcomingPayments}}
                        <li>
                            {{formatDate this.date}}: {{this.amount}} {{this.currency}} 
                            ({{this.loanId}})
                        </li>
                    {{/each}}
                </ul>
            </div>
        {{/if}}
    </section>

    <section class="bank-services">
        <h2>Возможности нашего банка</h2>
        <ul>
            <li><strong>Переводы:</strong> Быстрые и безопасные переводы между счетами.</li>
            <li><strong>Сберегательный счёт:</strong> Удобное хранение средств на сберегательном счёте.</li>
            <li><strong>Кредиты:</strong> Конкурентные ставки на кредиты.</li>
        </ul>
    </section>

    <section class="quick-actions">
        <h2>Быстрые действия</h2>
        <button onclick="location.href='/main/deposit'">Пополнить счет</button>
        <button onclick="location.href='/main/transfer'">Перевести средства на другой счёт</button>
        <button onclick="location.href='/main/saving-account/create'">Создать сберегательный счет</button>
        <button onclick="location.href='/main/loans/new'">Оформить кредит</button>
    </section>

    <section class="recent-transactions">
        <h2>Транзакции</h2>

        <button onclick="location.href='/main/transactions'">Посмотреть историю транзакций</button>
    </section>

    <script>
    document.addEventListener('DOMContentLoaded', async () => {
        const selectedAccountId = document.getElementById('accountSelect').value;
        await updateAccountInfo(selectedAccountId);
    });

    async function changeAccount(accountId) {
        try {
            const response = await fetch(`/main/change-account/${accountId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                credentials: 'include'
            });

            if (!response.ok) {
                throw new Error('Ошибка сервера');
            }

            const data = await response.json();
            
            if (data.success) {
                await updateAccountInfo(accountId);
            }
        } catch (error) {
            console.error('Ошибка:', error);
            alert(error.message || 'Ошибка соединения с сервером');
        }
    }

    async function updateAccountInfo(accountId) {
        try {
            const balanceResponse = await fetch(`/main/account-balance/${accountId}`);
            if (!balanceResponse.ok) {
                throw new Error('Не удалось получить данные о счете');
            }

            const { balance, currency } = await balanceResponse.json();
            
            const balanceElement = document.querySelector('.balance-display');
            if (balanceElement) {
                balanceElement.textContent = `${balance} ${currency}`;
            }
            
            const accountSelect = document.getElementById('accountSelect');
            if (accountSelect) {
                const selectedOption = accountSelect.querySelector(`option[value="${accountId}"]`);
                if (selectedOption) {
                    selectedOption.text = `${selectedOption.text.split(' - ')[0]} - ${balance} ${currency}`;
                }
            }
        } catch (error) {
            console.error('Ошибка при обновлении информации:', error);
        }
    }
</script>
</body>
</html>